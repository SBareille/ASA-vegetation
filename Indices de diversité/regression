# regression on diversity and richness index
coord <- read.table("coord.txt", header = TRUE)
flo <- read.table("flo.txt",header = TRUE)
mil <- read.table("mil.txt",header = TRUE)
#install.packages('MASS')
#library('MASS')
#install.packages('olsrr')
#library('olsrr')


# Our aim in this script is to see if the diversity index and the richness
# of our sites can be explained by the environmental prametres

#QUESTION: Which explanatory variables influence the Diversity of the given community ?
# Dependent variables: Diversity indexes = Simpson - Shannon - Pielou - Richness
# Explanatory variables: every environemental prametres measurements




##### Calculation of the indexes ####
#Simson    ( 1 out of 4 )
Simson=function(l){    # This function calculates the index
  N=sum(l)
  Si = 0
  for(i in l){
    if(i>0){
      Si=Si+(i*(i-1))
    }}
  return(1-Si/(N*(N-1)))
}
Simpson_index_Flo=apply(flo, 1, Simson)

#Shannon  ( 2 out of 4 )
Shannon=function(l){
  N=sum(l)
  Pi = NULL
  SY=0
  for(i in l){
    if(i>0){
      Pi=c(Pi,i/N)
      SY=(i/N)*log2(i/N)
    }}
  return(-1*SY)
}
Shannon_index_Flo=apply(flo, 1, shan)

#Pielou ( 3 out of 4 )
Pielou=function(f){
  H=Shannon(f)
  I=rep(0,length(H))
  for(i in 1:length(H)){
    I[i]=H[i]/max(H)
  }
  return(I)
}
Pielou_index_Flo=Pielou(flo)


# specifique richness 
richness=function(station){
  counter = 0
  for (i in station){
    if (i == 0){
      counter = counter + 1
    }
  }
  specific_richness = length(station)-counter
  return(specific_richness)
}

Richness_Flo=apply(flo, 1, richness)




##### Data - Exploration #####
#Simpson
par(mfrow=c(1,2))
# Boxplot
boxplot(Simpson_index_Flo
        ,col='red'
        ,ylab='Size')
# Cleveland plot
dotchart(Simpson_index_Flo
         ,pch=16
         ,col='#339966'
         ,xlab='Size')
# Conclusion : there is one value very low in comparaison of others

par(mfrow=c(1,2))
#Histogram
hist(Simpson_index_Flo
     ,breaks=8
     , col='red'
     , xlab='Size'
     , ylab='Number')
# Quantile-Quantile Plot
qqnorm(Simpson_index_Flo
       , col='red'
       , pch=16)
qqline(Simpson_index_Flo)

# Conclusion : It's not quite good 

#####  Relationships Y vs Xs #####
par(mfrow=c(1,1))
plot(Simpson_index_Flo~mil$Argile
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Limon
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Sable
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$K2O
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Mg..
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Na..l
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$K.
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Altitude
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Capa_Reten
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Conduc
     , col='red'
     , pch=16)
plot(Simpson_index_Flo~mil$Na..100g
     , col='red'
     , pch=16)


require(MASS)
data_simpson = cbind(mil , Simpson_index_Flo )
model_simpson<-lm( Simpson_index_Flo~. , data = data_simpson )
summary(model_simpson)

#drop1
drop1(model_simpson,test='F')
mod_2 <- lm(Simpson_index_Flo~K.+Altitude, data = data_simpson)
summary(mod_2)
# Coefficients:
#   Estimate Std. Error t value Pr(>|t|)    
# (Intercept)  0.864550   0.047402  18.239  < 2e-16 ***
#   K.          -0.073871   0.015347  -4.813 5.65e-06 ***
#   Altitude     0.019353   0.009993   1.937   0.0558 .  

#step
t=step(model_simpson,
         direction = c("both"))
# (Intercept)         Sable           K2O            K.         Na..l      Altitude 
# 0.8844821523 -0.0020350490 -0.0346266956 -0.0737330884  0.0004495682  0.0237051286

# Conclusion : Explained Varialbes does not follow a gausian distribution. 





#Shannon
par(mfrow=c(1,2))
# Boxplot
boxplot(Shannon_index_Flo
        ,col='red'
        ,ylab='Size')
# Cleveland plot
dotchart(Shannon_index_Flo
         ,pch=16
         ,col='#339966'
         ,xlab='Size')
# Conclusion : there is one value very low in comparaison of others

par(mfrow=c(1,2))
#Histogram
hist(Shannon_index_Flo
     ,breaks=8
     , col='red'
     , xlab='Size'
     , ylab='Number')
# Quantile-Quantile Plot
qqnorm(Shannon_index_Flo
       , col='red'
       , pch=16)
qqline(Shannon_index_Flo)

# Conclusion : It's not better than Simpson but still not very normal

#####  Relationships Y vs Xs #####
par(mfrow=c(1,1))
plot(Shannon_index_Flo~mil$Argile
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Limon
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Sable
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$K2O
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Mg..
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Na..l
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$K.
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Altitude
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Capa_Reten
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Conduc
     , col='red'
     , pch=16)
plot(Shannon_index_Flo~mil$Na..100g
     , col='red'
     , pch=16)



data_shannon = cbind(mil , Shannon_index_Flo )
model_shannon<-lm( Shannon_index_Flo~. , data = data_simpson )
summary(model_shannon)

#drop1
drop1(model_shannon,test='F')
mod_2 <- lm(Shannon_index_Flo~Mg.. , data_simpson)
summary(mod_2)
# Coefficients:
#   Estimate Std. Error t value Pr(>|t|)    
# (Intercept)  0.431620   0.024948  17.301   <2e-16 ***
#   Mg..        -0.004082   0.001591  -2.566   0.0119 *  

#step
t=step(model_shannon,
       direction = c("both"))
# (Intercept)       Argile        Limon          K2O         Mg..           K.   Capa_Reten 
# 0.504519424 -0.001676074 -0.001677872 -0.019874404 -0.004243049  0.021584365  0.001941712 

# Conclusion : Explained Varialbes does not follow a gausian distribution. 





##### Data - Exploration #####
#Richness
par(mfrow=c(1,2))
# Boxplot
boxplot(Richness_Flo
        ,col='red'
        ,ylab='Size')
# Cleveland plot
dotchart(Richness_Flo
         ,pch=16
         ,col='#339966'
         ,xlab='Size')
# Conclusion : there are some values rather high in comparaison of others

par(mfrow=c(1,2))
#Histogram
hist(Richness_Flo
     ,breaks=8
     , col='red'
     , xlab='Size'
     , ylab='Number')
# Quantile-Quantile Plot
qqnorm(Richness_Flo
       , col='red'
       , pch=16)
qqline(Richness_Flo)

# Conclusion : It's satisfactory


#####  Relationships Y vs Xs #####
par(mfrow=c(1,1))
plot(Richness_Flo~mil$Argile
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Limon
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Sable
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$K2O
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Mg..
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Na..l
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$K.
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Altitude
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Capa_Reten
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Conduc
     , col='red'
     , pch=16)
plot(Richness_Flo~mil$Na..100g
     , col='red'
     , pch=16)


#require(MASS)


data_richness = cbind(mil , Richness_Flo )
model_richness<-lm( Richness_Flo~. , data = data_richness )
summary(model_richness)

#drop1
drop1(model_richness,test='F')
mod_2 <- lm(Richness_Flo~K.+Altitude+Conduc+Mg.., data = data_richness)
summary(mod_2)
drop1(mod_2,test='F')
mod_fin <- lm(Richness_Flo~K.+Mg.., data = data_richness)
summary(mod_fin)

# Coefficients:
#   Estimate Std. Error t value Pr(>|t|)    
# (Intercept)  7.03930    0.78869   8.925 3.54e-14 ***
#   K.          -1.62116    0.31480  -5.150 1.43e-06 ***
#   Mg..         0.11336    0.05425   2.090   0.0393 *  

#step
t=step(model_richness,
       direction = c("both"))
# Step:  AIC=201.26
# Richness_Flo ~ Limon + Sable + Mg.. + K. + Conduc + Na..l

# Conclusion : Explained Varialbe seems explained by K and MG
# yet:
plot(Richness_Flo~mil$K.
     , col='red'
     , pch=16)
# does not provide satisfactory feedback

# jt'ente un truc : 

data=cbind(flo,mil,coord)
xy=data[,68:69] #extraction of the coordinates
knear4<-knearneigh(as.matrix(xy),4) # rook type of connection approximate by the 4th nearest neighbor criteria
knn2nb(knear4)
space_mat.bin<- nb2listw(knn2nb(knear4), style="B",zero.policy=TRUE) 

# ya ça diapo 109 du pdf de Pascaline, mais ya pas les explications qui vont avec... dommage ça à l'aire stillé
lm.LMtests(model_shannon,space_mat.bin, test="all")
lm.LMtests(model_richness,space_mat.bin, test="all")  # Pvalue significative
